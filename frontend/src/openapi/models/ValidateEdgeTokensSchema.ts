/* tslint:disable */
/* eslint-disable */
/**
 * Unleash API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.15.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ValidateEdgeTokensSchemaTokensInner } from './ValidateEdgeTokensSchemaTokensInner';
import {
    ValidateEdgeTokensSchemaTokensInnerFromJSON,
    ValidateEdgeTokensSchemaTokensInnerFromJSONTyped,
    ValidateEdgeTokensSchemaTokensInnerToJSON,
} from './ValidateEdgeTokensSchemaTokensInner';

/**
 * 
 * @export
 * @interface ValidateEdgeTokensSchema
 */
export interface ValidateEdgeTokensSchema {
    /**
     * 
     * @type {Array<ValidateEdgeTokensSchemaTokensInner>}
     * @memberof ValidateEdgeTokensSchema
     */
    tokens: Array<ValidateEdgeTokensSchemaTokensInner>;
}

/**
 * Check if a given object implements the ValidateEdgeTokensSchema interface.
 */
export function instanceOfValidateEdgeTokensSchema(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "tokens" in value;

    return isInstance;
}

export function ValidateEdgeTokensSchemaFromJSON(json: any): ValidateEdgeTokensSchema {
    return ValidateEdgeTokensSchemaFromJSONTyped(json, false);
}

export function ValidateEdgeTokensSchemaFromJSONTyped(json: any, ignoreDiscriminator: boolean): ValidateEdgeTokensSchema {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'tokens': ((json['tokens'] as Array<any>).map(ValidateEdgeTokensSchemaTokensInnerFromJSON)),
    };
}

export function ValidateEdgeTokensSchemaToJSON(value?: ValidateEdgeTokensSchema | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'tokens': ((value.tokens as Array<any>).map(ValidateEdgeTokensSchemaTokensInnerToJSON)),
    };
}

