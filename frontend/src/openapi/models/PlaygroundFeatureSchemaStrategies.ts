/* tslint:disable */
/* eslint-disable */
/**
 * Unleash API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.15.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PlaygroundFeatureSchemaStrategiesResult } from './PlaygroundFeatureSchemaStrategiesResult';
import {
    PlaygroundFeatureSchemaStrategiesResultFromJSON,
    PlaygroundFeatureSchemaStrategiesResultFromJSONTyped,
    PlaygroundFeatureSchemaStrategiesResultToJSON,
} from './PlaygroundFeatureSchemaStrategiesResult';
import type { PlaygroundStrategySchema } from './PlaygroundStrategySchema';
import {
    PlaygroundStrategySchemaFromJSON,
    PlaygroundStrategySchemaFromJSONTyped,
    PlaygroundStrategySchemaToJSON,
} from './PlaygroundStrategySchema';

/**
 * 
 * @export
 * @interface PlaygroundFeatureSchemaStrategies
 */
export interface PlaygroundFeatureSchemaStrategies {
    /**
     * 
     * @type {PlaygroundFeatureSchemaStrategiesResult}
     * @memberof PlaygroundFeatureSchemaStrategies
     */
    result: PlaygroundFeatureSchemaStrategiesResult;
    /**
     * The strategies that apply to this feature.
     * @type {Array<PlaygroundStrategySchema>}
     * @memberof PlaygroundFeatureSchemaStrategies
     */
    data: Array<PlaygroundStrategySchema>;
}

/**
 * Check if a given object implements the PlaygroundFeatureSchemaStrategies interface.
 */
export function instanceOfPlaygroundFeatureSchemaStrategies(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "result" in value;
    isInstance = isInstance && "data" in value;

    return isInstance;
}

export function PlaygroundFeatureSchemaStrategiesFromJSON(json: any): PlaygroundFeatureSchemaStrategies {
    return PlaygroundFeatureSchemaStrategiesFromJSONTyped(json, false);
}

export function PlaygroundFeatureSchemaStrategiesFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlaygroundFeatureSchemaStrategies {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'result': PlaygroundFeatureSchemaStrategiesResultFromJSON(json['result']),
        'data': ((json['data'] as Array<any>).map(PlaygroundStrategySchemaFromJSON)),
    };
}

export function PlaygroundFeatureSchemaStrategiesToJSON(value?: PlaygroundFeatureSchemaStrategies | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'result': PlaygroundFeatureSchemaStrategiesResultToJSON(value.result),
        'data': ((value.data as Array<any>).map(PlaygroundStrategySchemaToJSON)),
    };
}

