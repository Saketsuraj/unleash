/* tslint:disable */
/* eslint-disable */
/**
 * Unleash API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.15.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ProxyClientSchemaStarted } from './ProxyClientSchemaStarted';
import {
    ProxyClientSchemaStartedFromJSON,
    ProxyClientSchemaStartedFromJSONTyped,
    ProxyClientSchemaStartedToJSON,
} from './ProxyClientSchemaStarted';

/**
 * 
 * @export
 * @interface ProxyClientSchema
 */
export interface ProxyClientSchema {
    /**
     * Name of the application using Unleash
     * @type {string}
     * @memberof ProxyClientSchema
     */
    appName: string;
    /**
     * Instance id for this application (typically hostname, podId or similar)
     * @type {string}
     * @memberof ProxyClientSchema
     */
    instanceId?: string;
    /**
     * Optional field that describes the sdk version (name:version)
     * @type {string}
     * @memberof ProxyClientSchema
     */
    sdkVersion?: string;
    /**
     * 
     * @type {string}
     * @memberof ProxyClientSchema
     * @deprecated
     */
    environment?: string;
    /**
     * At which interval, in milliseconds, will this client be expected to send metrics
     * @type {number}
     * @memberof ProxyClientSchema
     */
    interval: number;
    /**
     * 
     * @type {ProxyClientSchemaStarted}
     * @memberof ProxyClientSchema
     */
    started: ProxyClientSchemaStarted;
    /**
     * List of strategies implemented by this application
     * @type {Array<string>}
     * @memberof ProxyClientSchema
     */
    strategies: Array<string>;
}

/**
 * Check if a given object implements the ProxyClientSchema interface.
 */
export function instanceOfProxyClientSchema(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "appName" in value;
    isInstance = isInstance && "interval" in value;
    isInstance = isInstance && "started" in value;
    isInstance = isInstance && "strategies" in value;

    return isInstance;
}

export function ProxyClientSchemaFromJSON(json: any): ProxyClientSchema {
    return ProxyClientSchemaFromJSONTyped(json, false);
}

export function ProxyClientSchemaFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProxyClientSchema {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'appName': json['appName'],
        'instanceId': !exists(json, 'instanceId') ? undefined : json['instanceId'],
        'sdkVersion': !exists(json, 'sdkVersion') ? undefined : json['sdkVersion'],
        'environment': !exists(json, 'environment') ? undefined : json['environment'],
        'interval': json['interval'],
        'started': ProxyClientSchemaStartedFromJSON(json['started']),
        'strategies': json['strategies'],
    };
}

export function ProxyClientSchemaToJSON(value?: ProxyClientSchema | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'appName': value.appName,
        'instanceId': value.instanceId,
        'sdkVersion': value.sdkVersion,
        'environment': value.environment,
        'interval': value.interval,
        'started': ProxyClientSchemaStartedToJSON(value.started),
        'strategies': value.strategies,
    };
}

