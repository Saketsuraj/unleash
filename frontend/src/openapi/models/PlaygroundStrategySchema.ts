/* tslint:disable */
/* eslint-disable */
/**
 * Unleash API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.15.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PlaygroundConstraintSchema } from './PlaygroundConstraintSchema';
import {
    PlaygroundConstraintSchemaFromJSON,
    PlaygroundConstraintSchemaFromJSONTyped,
    PlaygroundConstraintSchemaToJSON,
} from './PlaygroundConstraintSchema';
import type { PlaygroundSegmentSchema } from './PlaygroundSegmentSchema';
import {
    PlaygroundSegmentSchemaFromJSON,
    PlaygroundSegmentSchemaFromJSONTyped,
    PlaygroundSegmentSchemaToJSON,
} from './PlaygroundSegmentSchema';
import type { PlaygroundStrategySchemaResult } from './PlaygroundStrategySchemaResult';
import {
    PlaygroundStrategySchemaResultFromJSON,
    PlaygroundStrategySchemaResultFromJSONTyped,
    PlaygroundStrategySchemaResultToJSON,
} from './PlaygroundStrategySchemaResult';

/**
 * 
 * @export
 * @interface PlaygroundStrategySchema
 */
export interface PlaygroundStrategySchema {
    /**
     * The strategy's name.
     * @type {string}
     * @memberof PlaygroundStrategySchema
     */
    name: string;
    /**
     * The strategy's id.
     * @type {string}
     * @memberof PlaygroundStrategySchema
     */
    id: string;
    /**
     * 
     * @type {PlaygroundStrategySchemaResult}
     * @memberof PlaygroundStrategySchema
     */
    result: PlaygroundStrategySchemaResult;
    /**
     * The strategy's segments and their evaluation results.
     * @type {Array<PlaygroundSegmentSchema>}
     * @memberof PlaygroundStrategySchema
     */
    segments: Array<PlaygroundSegmentSchema>;
    /**
     * The strategy's constraints and their evaluation results.
     * @type {Array<PlaygroundConstraintSchema>}
     * @memberof PlaygroundStrategySchema
     */
    constraints: Array<PlaygroundConstraintSchema>;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof PlaygroundStrategySchema
     */
    parameters: { [key: string]: string; };
}

/**
 * Check if a given object implements the PlaygroundStrategySchema interface.
 */
export function instanceOfPlaygroundStrategySchema(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "result" in value;
    isInstance = isInstance && "segments" in value;
    isInstance = isInstance && "constraints" in value;
    isInstance = isInstance && "parameters" in value;

    return isInstance;
}

export function PlaygroundStrategySchemaFromJSON(json: any): PlaygroundStrategySchema {
    return PlaygroundStrategySchemaFromJSONTyped(json, false);
}

export function PlaygroundStrategySchemaFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlaygroundStrategySchema {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'id': json['id'],
        'result': PlaygroundStrategySchemaResultFromJSON(json['result']),
        'segments': ((json['segments'] as Array<any>).map(PlaygroundSegmentSchemaFromJSON)),
        'constraints': ((json['constraints'] as Array<any>).map(PlaygroundConstraintSchemaFromJSON)),
        'parameters': json['parameters'],
    };
}

export function PlaygroundStrategySchemaToJSON(value?: PlaygroundStrategySchema | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'id': value.id,
        'result': PlaygroundStrategySchemaResultToJSON(value.result),
        'segments': ((value.segments as Array<any>).map(PlaygroundSegmentSchemaToJSON)),
        'constraints': ((value.constraints as Array<any>).map(PlaygroundConstraintSchemaToJSON)),
        'parameters': value.parameters,
    };
}

