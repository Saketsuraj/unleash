/* tslint:disable */
/* eslint-disable */
/**
 * Unleash API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.15.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ProxyFeatureSchemaVariant } from './ProxyFeatureSchemaVariant';
import {
    ProxyFeatureSchemaVariantFromJSON,
    ProxyFeatureSchemaVariantFromJSONTyped,
    ProxyFeatureSchemaVariantToJSON,
} from './ProxyFeatureSchemaVariant';

/**
 * 
 * @export
 * @interface ProxyFeatureSchema
 */
export interface ProxyFeatureSchema {
    /**
     * 
     * @type {string}
     * @memberof ProxyFeatureSchema
     */
    name: string;
    /**
     * 
     * @type {boolean}
     * @memberof ProxyFeatureSchema
     */
    enabled: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ProxyFeatureSchema
     */
    impressionData: boolean;
    /**
     * 
     * @type {ProxyFeatureSchemaVariant}
     * @memberof ProxyFeatureSchema
     */
    variant?: ProxyFeatureSchemaVariant;
}

/**
 * Check if a given object implements the ProxyFeatureSchema interface.
 */
export function instanceOfProxyFeatureSchema(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "enabled" in value;
    isInstance = isInstance && "impressionData" in value;

    return isInstance;
}

export function ProxyFeatureSchemaFromJSON(json: any): ProxyFeatureSchema {
    return ProxyFeatureSchemaFromJSONTyped(json, false);
}

export function ProxyFeatureSchemaFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProxyFeatureSchema {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'enabled': json['enabled'],
        'impressionData': json['impressionData'],
        'variant': !exists(json, 'variant') ? undefined : ProxyFeatureSchemaVariantFromJSON(json['variant']),
    };
}

export function ProxyFeatureSchemaToJSON(value?: ProxyFeatureSchema | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'enabled': value.enabled,
        'impressionData': value.impressionData,
        'variant': ProxyFeatureSchemaVariantToJSON(value.variant),
    };
}

