/* tslint:disable */
/* eslint-disable */
/**
 * Unleash API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.15.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EdgeTokenSchema } from './EdgeTokenSchema';
import {
    EdgeTokenSchemaFromJSON,
    EdgeTokenSchemaFromJSONTyped,
    EdgeTokenSchemaToJSON,
} from './EdgeTokenSchema';

/**
 * 
 * @export
 * @interface ValidateEdgeTokensSchemaTokensInner
 */
export interface ValidateEdgeTokensSchemaTokensInner {
    /**
     * 
     * @type {Array<string>}
     * @memberof ValidateEdgeTokensSchemaTokensInner
     */
    projects: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof ValidateEdgeTokensSchemaTokensInner
     */
    type: ValidateEdgeTokensSchemaTokensInnerTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof ValidateEdgeTokensSchemaTokensInner
     */
    token: string;
}


/**
 * @export
 */
export const ValidateEdgeTokensSchemaTokensInnerTypeEnum = {
    Client: 'client',
    Admin: 'admin',
    Frontend: 'frontend'
} as const;
export type ValidateEdgeTokensSchemaTokensInnerTypeEnum = typeof ValidateEdgeTokensSchemaTokensInnerTypeEnum[keyof typeof ValidateEdgeTokensSchemaTokensInnerTypeEnum];


/**
 * Check if a given object implements the ValidateEdgeTokensSchemaTokensInner interface.
 */
export function instanceOfValidateEdgeTokensSchemaTokensInner(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "projects" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "token" in value;

    return isInstance;
}

export function ValidateEdgeTokensSchemaTokensInnerFromJSON(json: any): ValidateEdgeTokensSchemaTokensInner {
    return ValidateEdgeTokensSchemaTokensInnerFromJSONTyped(json, false);
}

export function ValidateEdgeTokensSchemaTokensInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): ValidateEdgeTokensSchemaTokensInner {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'projects': json['projects'],
        'type': json['type'],
        'token': json['token'],
    };
}

export function ValidateEdgeTokensSchemaTokensInnerToJSON(value?: ValidateEdgeTokensSchemaTokensInner | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'projects': value.projects,
        'type': value.type,
        'token': value.token,
    };
}

