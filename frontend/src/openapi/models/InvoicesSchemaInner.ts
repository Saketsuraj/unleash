/* tslint:disable */
/* eslint-disable */
/**
 * Unleash API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.15.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface InvoicesSchemaInner
 */
export interface InvoicesSchemaInner {
    /**
     * 
     * @type {string}
     * @memberof InvoicesSchemaInner
     */
    amountFormatted: string;
    /**
     * 
     * @type {boolean}
     * @memberof InvoicesSchemaInner
     */
    paid: boolean;
    /**
     * 
     * @type {string}
     * @memberof InvoicesSchemaInner
     */
    status: string;
    /**
     * 
     * @type {string}
     * @memberof InvoicesSchemaInner
     */
    dueDate?: string;
    /**
     * 
     * @type {string}
     * @memberof InvoicesSchemaInner
     */
    invoiceURL: string;
    /**
     * 
     * @type {string}
     * @memberof InvoicesSchemaInner
     */
    invoicePDF: string;
}

/**
 * Check if a given object implements the InvoicesSchemaInner interface.
 */
export function instanceOfInvoicesSchemaInner(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "amountFormatted" in value;
    isInstance = isInstance && "paid" in value;
    isInstance = isInstance && "status" in value;
    isInstance = isInstance && "invoiceURL" in value;
    isInstance = isInstance && "invoicePDF" in value;

    return isInstance;
}

export function InvoicesSchemaInnerFromJSON(json: any): InvoicesSchemaInner {
    return InvoicesSchemaInnerFromJSONTyped(json, false);
}

export function InvoicesSchemaInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): InvoicesSchemaInner {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'amountFormatted': json['amountFormatted'],
        'paid': json['paid'],
        'status': json['status'],
        'dueDate': !exists(json, 'dueDate') ? undefined : json['dueDate'],
        'invoiceURL': json['invoiceURL'],
        'invoicePDF': json['invoicePDF'],
    };
}

export function InvoicesSchemaInnerToJSON(value?: InvoicesSchemaInner | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'amountFormatted': value.amountFormatted,
        'paid': value.paid,
        'status': value.status,
        'dueDate': value.dueDate,
        'invoiceURL': value.invoiceURL,
        'invoicePDF': value.invoicePDF,
    };
}

