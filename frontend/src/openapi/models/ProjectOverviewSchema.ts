/* tslint:disable */
/* eslint-disable */
/**
 * Unleash API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.15.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ProjectSchema } from './ProjectSchema';
import {
    ProjectSchemaFromJSON,
    ProjectSchemaFromJSONTyped,
    ProjectSchemaToJSON,
} from './ProjectSchema';

/**
 * 
 * @export
 * @interface ProjectOverviewSchema
 */
export interface ProjectOverviewSchema {
    /**
     * 
     * @type {number}
     * @memberof ProjectOverviewSchema
     */
    featureCount: number;
    /**
     * 
     * @type {number}
     * @memberof ProjectOverviewSchema
     */
    memberCount: number;
    /**
     * 
     * @type {Array<ProjectSchema>}
     * @memberof ProjectOverviewSchema
     */
    projects: Array<ProjectSchema>;
}

/**
 * Check if a given object implements the ProjectOverviewSchema interface.
 */
export function instanceOfProjectOverviewSchema(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "featureCount" in value;
    isInstance = isInstance && "memberCount" in value;
    isInstance = isInstance && "projects" in value;

    return isInstance;
}

export function ProjectOverviewSchemaFromJSON(json: any): ProjectOverviewSchema {
    return ProjectOverviewSchemaFromJSONTyped(json, false);
}

export function ProjectOverviewSchemaFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProjectOverviewSchema {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'featureCount': json['featureCount'],
        'memberCount': json['memberCount'],
        'projects': ((json['projects'] as Array<any>).map(ProjectSchemaFromJSON)),
    };
}

export function ProjectOverviewSchemaToJSON(value?: ProjectOverviewSchema | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'featureCount': value.featureCount,
        'memberCount': value.memberCount,
        'projects': ((value.projects as Array<any>).map(ProjectSchemaToJSON)),
    };
}

