/* tslint:disable */
/* eslint-disable */
/**
 * Unleash API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.15.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AdminPermissionSchema } from './AdminPermissionSchema';
import {
    AdminPermissionSchemaFromJSON,
    AdminPermissionSchemaFromJSONTyped,
    AdminPermissionSchemaToJSON,
} from './AdminPermissionSchema';
import type { AdminPermissionsSchemaPermissionsEnvironmentsInner } from './AdminPermissionsSchemaPermissionsEnvironmentsInner';
import {
    AdminPermissionsSchemaPermissionsEnvironmentsInnerFromJSON,
    AdminPermissionsSchemaPermissionsEnvironmentsInnerFromJSONTyped,
    AdminPermissionsSchemaPermissionsEnvironmentsInnerToJSON,
} from './AdminPermissionsSchemaPermissionsEnvironmentsInner';

/**
 * 
 * @export
 * @interface AdminPermissionsSchemaPermissions
 */
export interface AdminPermissionsSchemaPermissions {
    /**
     * 
     * @type {Array<AdminPermissionSchema>}
     * @memberof AdminPermissionsSchemaPermissions
     */
    project: Array<AdminPermissionSchema>;
    /**
     * 
     * @type {Array<AdminPermissionsSchemaPermissionsEnvironmentsInner>}
     * @memberof AdminPermissionsSchemaPermissions
     */
    environments: Array<AdminPermissionsSchemaPermissionsEnvironmentsInner>;
}

/**
 * Check if a given object implements the AdminPermissionsSchemaPermissions interface.
 */
export function instanceOfAdminPermissionsSchemaPermissions(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "project" in value;
    isInstance = isInstance && "environments" in value;

    return isInstance;
}

export function AdminPermissionsSchemaPermissionsFromJSON(json: any): AdminPermissionsSchemaPermissions {
    return AdminPermissionsSchemaPermissionsFromJSONTyped(json, false);
}

export function AdminPermissionsSchemaPermissionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): AdminPermissionsSchemaPermissions {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'project': ((json['project'] as Array<any>).map(AdminPermissionSchemaFromJSON)),
        'environments': ((json['environments'] as Array<any>).map(AdminPermissionsSchemaPermissionsEnvironmentsInnerFromJSON)),
    };
}

export function AdminPermissionsSchemaPermissionsToJSON(value?: AdminPermissionsSchemaPermissions | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'project': ((value.project as Array<any>).map(AdminPermissionSchemaToJSON)),
        'environments': ((value.environments as Array<any>).map(AdminPermissionsSchemaPermissionsEnvironmentsInnerToJSON)),
    };
}

