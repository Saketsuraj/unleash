/* tslint:disable */
/* eslint-disable */
/**
 * Unleash API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.15.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { RoleSchema } from './RoleSchema';
import {
    RoleSchemaFromJSON,
    RoleSchemaFromJSONTyped,
    RoleSchemaToJSON,
} from './RoleSchema';

/**
 * 
 * @export
 * @interface RolesWithVersionSchema
 */
export interface RolesWithVersionSchema {
    /**
     * 
     * @type {number}
     * @memberof RolesWithVersionSchema
     */
    version: number;
    /**
     * 
     * @type {Array<RoleSchema>}
     * @memberof RolesWithVersionSchema
     */
    roles: Array<RoleSchema>;
}

/**
 * Check if a given object implements the RolesWithVersionSchema interface.
 */
export function instanceOfRolesWithVersionSchema(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "version" in value;
    isInstance = isInstance && "roles" in value;

    return isInstance;
}

export function RolesWithVersionSchemaFromJSON(json: any): RolesWithVersionSchema {
    return RolesWithVersionSchemaFromJSONTyped(json, false);
}

export function RolesWithVersionSchemaFromJSONTyped(json: any, ignoreDiscriminator: boolean): RolesWithVersionSchema {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'version': json['version'],
        'roles': ((json['roles'] as Array<any>).map(RoleSchemaFromJSON)),
    };
}

export function RolesWithVersionSchemaToJSON(value?: RolesWithVersionSchema | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'version': value.version,
        'roles': ((value.roles as Array<any>).map(RoleSchemaToJSON)),
    };
}

