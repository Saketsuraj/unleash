/* tslint:disable */
/* eslint-disable */
/**
 * Unleash API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.15.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PlaygroundConstraintSchema } from './PlaygroundConstraintSchema';
import {
    PlaygroundConstraintSchemaFromJSON,
    PlaygroundConstraintSchemaFromJSONTyped,
    PlaygroundConstraintSchemaToJSON,
} from './PlaygroundConstraintSchema';

/**
 * 
 * @export
 * @interface PlaygroundSegmentSchema
 */
export interface PlaygroundSegmentSchema {
    /**
     * The segment's id.
     * @type {number}
     * @memberof PlaygroundSegmentSchema
     */
    id: number;
    /**
     * The name of the segment.
     * @type {string}
     * @memberof PlaygroundSegmentSchema
     */
    name: string;
    /**
     * Whether this was evaluated as true or false.
     * @type {boolean}
     * @memberof PlaygroundSegmentSchema
     */
    result: boolean;
    /**
     * The list of constraints in this segment.
     * @type {Array<PlaygroundConstraintSchema>}
     * @memberof PlaygroundSegmentSchema
     */
    constraints: Array<PlaygroundConstraintSchema>;
}

/**
 * Check if a given object implements the PlaygroundSegmentSchema interface.
 */
export function instanceOfPlaygroundSegmentSchema(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "result" in value;
    isInstance = isInstance && "constraints" in value;

    return isInstance;
}

export function PlaygroundSegmentSchemaFromJSON(json: any): PlaygroundSegmentSchema {
    return PlaygroundSegmentSchemaFromJSONTyped(json, false);
}

export function PlaygroundSegmentSchemaFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlaygroundSegmentSchema {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'result': json['result'],
        'constraints': ((json['constraints'] as Array<any>).map(PlaygroundConstraintSchemaFromJSON)),
    };
}

export function PlaygroundSegmentSchemaToJSON(value?: PlaygroundSegmentSchema | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'result': value.result,
        'constraints': ((value.constraints as Array<any>).map(PlaygroundConstraintSchemaToJSON)),
    };
}

