/* tslint:disable */
/* eslint-disable */
/**
 * Unleash API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.15.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { UserSchema } from './UserSchema';
import {
    UserSchemaFromJSON,
    UserSchemaFromJSONTyped,
    UserSchemaToJSON,
} from './UserSchema';

/**
 * 
 * @export
 * @interface GroupUserModelSchema
 */
export interface GroupUserModelSchema {
    /**
     * 
     * @type {Date}
     * @memberof GroupUserModelSchema
     */
    joinedAt?: Date;
    /**
     * 
     * @type {UserSchema}
     * @memberof GroupUserModelSchema
     */
    user: UserSchema;
}

/**
 * Check if a given object implements the GroupUserModelSchema interface.
 */
export function instanceOfGroupUserModelSchema(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "user" in value;

    return isInstance;
}

export function GroupUserModelSchemaFromJSON(json: any): GroupUserModelSchema {
    return GroupUserModelSchemaFromJSONTyped(json, false);
}

export function GroupUserModelSchemaFromJSONTyped(json: any, ignoreDiscriminator: boolean): GroupUserModelSchema {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'joinedAt': !exists(json, 'joinedAt') ? undefined : (new Date(json['joinedAt'])),
        'user': UserSchemaFromJSON(json['user']),
    };
}

export function GroupUserModelSchemaToJSON(value?: GroupUserModelSchema | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'joinedAt': value.joinedAt === undefined ? undefined : (value.joinedAt.toISOString()),
        'user': UserSchemaToJSON(value.user),
    };
}

